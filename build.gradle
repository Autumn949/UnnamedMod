buildscript {
    repositories {
        maven { url 'https://files.minecraftforge.net/maven' }
        maven { url 'https://dist.creeper.host/Sponge/maven' }
        maven { url 'https://maven.shadew.net/' }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
        classpath group: 'org.spongepowered', name: 'mixingradle', version: '0.7-SNAPSHOT'
        classpath group: 'net.shadew', name: 'modutil', version: '1.0-beta.10'
    }

}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.spongepowered.mixin'
apply plugin: 'net.shadew.modutil'
apply plugin: 'idea'
apply plugin: 'maven-publish'

version = '0.1-alpha.0'
group = 'unnameddev'
archivesBaseName = 'unnamedmod'

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.

minecraft {
    mappings channel: 'snapshot', version: '20201003-mixed-1.16.3'

    runs {
        client {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'info'

            mods {
                unnamedmod {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'info'

            mods {
                unnamedmod {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'info'

            args '--mod', 'unnamedmod', '--all',
                 '--output', file('src/generated/resources/'),
                 '--existing', file('src/main/resources/')

            mods {
                unnamedmod {
                    source sourceSets.main
                }
            }
        }
    }
}

mixin {
    add sourceSets.main, "unnamedmod.refmap.json"
}

repositories {
    mavenLocal()
    mavenCentral()
    maven {
        name = "Progwml6 maven"
        url = "https://dvs1.progwml6.com/files/maven/"
    }
    maven {
        name = "Shadew's Maven"
        url = "http://maven.shadew.net/"
    }
    maven {
        name = "tterrag's maven"
        url = "https://maven.tterrag.com/"
    }
}

configurations {
    embed // External deps embedded into the JAR file
    compile.extendsFrom(embed)
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

dependencies {
    minecraft 'net.minecraftforge:forge:1.16.5-36.0.9'
    embed "net.shadew:shwutil:1.5.0"
}

jar {
    doFirst {
        // Include necessary dependencies
        from configurations.embed.collect { it.isDirectory() ? it : zipTree(it) }
    }

    manifest {
        attributes([
            "Specification-Title"     : "unnamedmod",
            "Specification-Vendor"    : "unnameddev",
            "Specification-Version"   : "1",
            "Implementation-Title"    : project.name,
            "Implementation-Version"  : "${version}",
            "Implementation-Vendor"   : "unnameddev",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
            "MixinConnector"          : "com.example.examplemod.core.MixinConnector"
        ]
        )
    }
}

jar.finalizedBy('reobfJar')

modutil {
    shade('net.shadew.util', 'com.example.examplemod.internal.net.shadew.util')

    updateJson file('versioninfo/update.json')
    markdownChangelog file('versioninfo/latest_changelog.md')
    markdownChangelog file("versioninfo/${version}_changelog.md")

    changelogJson file("$rootDir/changelog.json")
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file:///${project.projectDir}/mcmodsrepo"
        }
    }
}
